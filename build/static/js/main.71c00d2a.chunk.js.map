{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/covid-image.png","app.jsx","index.jsx","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","app.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","durantion","separator","Date","toLocaleDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","console","log","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","Lable","options","legend","display","title","text","Styles","CountryPicker","handleCountryChange","fetchedCountries","setfetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","src","coronaImage","React","Component","reactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71c00d2a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3i62d\",\"card\":\"Cards_card__3VUJi\",\"infected\":\"Cards_infected__1Wvft\",\"recovered\":\"Cards_recovered__3clSt\",\"deaths\":\"Cards_deaths__D_nHl\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core'\r\nimport styles from './Cards.module.css'\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames'; // permite utilizar mais de uma classe css por elemento \r\n\r\n\r\n\r\nconst Cards  = ({data:{confirmed, recovered, deaths, lastUpdate} }) => {\r\n   \r\n   \r\n    if(!confirmed){\r\n        return 'loading';\r\n    }\r\n    \r\n    \r\n    return (\r\n        \r\n        <div className={styles.container}>\r\n            \r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom> Infectados</Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={confirmed.value} durantion={0.2} separator='.' />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">Ultima Atualização: {new Date (lastUpdate).toLocaleDateString()}</Typography>\r\n                    <Typography variant=\"body2\"> Numero de casos infectados pela Covid</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent> \r\n                    <Typography color=\"textSecondary\" gutterBottom> Recuperados</Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={recovered.value} durantion={0.2} separator='.' />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">Ultima Atualização: {new Date (lastUpdate).toLocaleDateString()} </Typography>\r\n                    <Typography variant=\"body2\"> Numero de recuperados da Covid</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent> \r\n                    <Typography color=\"textSecondary\" gutterBottom> Mortes</Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp start={0} end={deaths.value}durantion={0.2} separator='.' />\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">Ultima Atualização: {new Date (lastUpdate).toLocaleDateString()}</Typography>\r\n                    <Typography variant=\"body2\"> Numeros de Mortes Causadas pela Covid</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`\r\n    }\r\n    try {\r\n\r\n        // destructuring acessando a api e jogando os dados dentro do obj data\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n        // passando os valores do objeto data para o objeto modifiedData atraves do destructuring\r\n        return  {confirmed,recovered, deaths,lastUpdate }\r\n        \r\n     \r\n\r\n    } catch (error){\r\n        \r\n\r\n    }\r\n}\r\n\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n      const  { data } = await axios.get(`${url}/daily`);\r\n\r\n      const modifiedData = data.map((dailyData) => ({\r\n\r\n        confirmed: dailyData.confirmed.total,\r\n        deaths: dailyData.deaths.total,\r\n        date:dailyData.reportDate,\r\n\r\n      }))\r\n\r\n      return modifiedData;\r\n    } catch (error){\r\n\r\n    }\r\n}\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const  {data: {countries}} = await axios.get(`${url}/countries`)\r\n\r\n        return countries.map((country) => country.name)\r\n\r\n    }catch(error){\r\n\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api/index.js';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport Styles from './Chart.module.css';\r\n\r\n\r\nconst Chart  = ({data:{confirmed, deaths, recovered}, country}) => {\r\n    const [dailyData, setDailyData] = useState ([]);\r\n   \r\n\r\n\r\nuseEffect(() => {\r\n    const fetchAPI = async () => {\r\n        setDailyData(await fetchDailyData())\r\n\r\n    }\r\n\r\n    console.log(dailyData)\r\n\r\n    fetchAPI();\r\n}, []);\r\n\r\nconst lineChart = (\r\n    dailyData.length \r\n    ? \r\n    (<Line \r\n      data={{\r\n          labels: dailyData.map(({date}) => date),\r\n          datasets: [{\r\n            data: dailyData.map(({confirmed}) => confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map(({deaths}) => deaths),\r\n            label: 'deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,  \r\n\r\n          }],\r\n      }} \r\n    />) : null\r\n\r\n);\r\n\r\nconst barChart = (\r\n    confirmed\r\n    ? (\r\n        <Bar\r\n           data={{\r\n               labels: ['Infected', 'Recovered', 'Deaths'],\r\n               datasets: [{\r\n                  Lable: 'People',\r\n                  backgroundColor: [\r\n                      'rgba(0, 0, 255, 0.5)',\r\n                      'rgba(0, 255, 0, 0.5)',\r\n                      'rgba(2550, 0, 0, 0.5)',\r\n                ],\r\n                data:[confirmed.value, recovered.value, deaths.value],\r\n               }]\r\n               \r\n           }}\r\n\r\n           options = {{\r\n               legend: {display: false},\r\n               title: {display: true, text:`Estado atual em ${country}`}\r\n           }}\r\n        />\r\n    ) : null\r\n)\r\n\r\nreturn(\r\n    <div className={Styles.container}>\r\n        {country ? barChart : lineChart}\r\n    </div>\r\n)\r\n\r\n}\r\n\r\nexport default Chart;","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css'; \r\nimport {fetchCountries} from '../../api'\r\n\r\n\r\n\r\nconst CountryPicker  = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setfetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setfetchedCountries (await fetchCountries());\r\n\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setfetchedCountries]);\r\n\r\n    \r\n \r\n\r\n    return(\r\n    <FormControl className={styles.formControl}>\r\n        <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\r\n            <option value=\"\"> Global</option>\r\n            {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n        </NativeSelect>\r\n\r\n    </FormControl>\r\n    )\r\n}\r\n\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/covid-image.9e5d4fc7.png\";","import React from 'react';\r\n//import Cards from './components/Cards/Cards';\r\n//import Chart from './components/Chart/Chart';\r\n//import CountryPicker from './components/CountryPicker/CountryPicker'\r\n\r\n// forma mais fácil de importart componentes, sendo exportado em ./components/index.js\r\nimport { Cards, Chart, CountryPicker} from './components';    \r\nimport styles from './app.module.css'\r\nimport {fetchData} from './api/index'\r\n\r\nimport coronaImage from './images/covid-image.png'\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n\r\n       \r\n\r\n        this.setState({data: fetchedData})\r\n    \r\n        \r\n    }\r\n\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({data: fetchedData, country:country})\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        const {data, country} = this.state;\r\n      \r\n        \r\n        return(\r\n          <div className={styles.container}>\r\n              <img src={coronaImage}/>\r\n              <Cards data={data}/>\r\n              <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n              <Chart data={data} country={country}/>\r\n          </div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport reactDOM from 'react-dom';\r\n\r\nimport App from './app.jsx';\r\n\r\n\r\nreactDOM.render(<App />, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__38Bz9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3mafJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"app_container__3sYTQ\",\"image\":\"app_image__1fxMK\"};"],"sourceRoot":""}